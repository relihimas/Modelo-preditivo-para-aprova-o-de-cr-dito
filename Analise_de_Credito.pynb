{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Modelo preditivo para aprovação de crédito\n",
    "\n",
    "Modelos de score de crédito calculam a probabilidade de inadimplência e são uma das\n",
    "principais ferramentas utilizadas por diversas empresas para aprovar ou negar um crédito.\n",
    "O objetivo deste desafio é criar um modelo preditivo calculando a probabilidade de\n",
    "inadimplência de cada novo pedido de crédito."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As variáveis da base de dados são descritas abaixo:\n",
    "\n",
    "● idade: A idade do cliente.\n",
    "\n",
    "● numero_de_dependentes: O número de pessoas dependentes do cliente.\n",
    "\n",
    "● salario_mensal: Salário mensal do cliente.\n",
    "\n",
    "● numero_emprestimos_imobiliarios: Quantidade de empréstimos imobiliários que o cliente possui em aberto.\n",
    "\n",
    "● numero_vezes_passou_90_dias: Número de vezes que o tomador passou mais de 90 dias em atraso.\n",
    "\n",
    "● util_linhas_inseguras: Quanto que o cliente está usando, relativamente ao limite dele, de linhas de crédito que não são seguradas por qualquer bem do tomador e.g: imoveis, carros etc. \n",
    "\n",
    "● vezes_passou_de_30_59_dias: Número de vezes que o cliente atrasou, entre 30 e 59 dias, o pagamento de um empréstimo.\n",
    "\n",
    "● razao_debito: Razão entre as dívidas e o patrimônio do tomador. razão débito = Dividas/Patrimônio\n",
    "\n",
    "● numero_linhas_crdto_aberto: Número de empréstimos em aberto pelo cliente.\n",
    "\n",
    "● numero_de_vezes_que_passou_60_89_dias: Número de vezes que o cliente atrasou, entre 60 e 89 dias, o pagamento de um empréstimo."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Importando Bibliotecas e Arquivo de Treino"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#importando as bibliotecas\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#importando o arquivo de treino\n",
    "df_treino = pd.read_csv('treino.csv', sep=',', encoding='utf-8')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>inadimplente</th>\n",
       "      <th>util_linhas_inseguras</th>\n",
       "      <th>idade</th>\n",
       "      <th>vezes_passou_de_30_59_dias</th>\n",
       "      <th>razao_debito</th>\n",
       "      <th>salario_mensal</th>\n",
       "      <th>numero_linhas_crdto_aberto</th>\n",
       "      <th>numero_vezes_passou_90_dias</th>\n",
       "      <th>numero_emprestimos_imobiliarios</th>\n",
       "      <th>numero_de_vezes_que_passou_60_89_dias</th>\n",
       "      <th>numero_de_dependentes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0.766127</td>\n",
       "      <td>45</td>\n",
       "      <td>2</td>\n",
       "      <td>0.802982</td>\n",
       "      <td>9120.0</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0.957151</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>0.121876</td>\n",
       "      <td>2600.0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0.658180</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>0.085113</td>\n",
       "      <td>3042.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0.233810</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>0.036050</td>\n",
       "      <td>3300.0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0.907239</td>\n",
       "      <td>49</td>\n",
       "      <td>1</td>\n",
       "      <td>0.024926</td>\n",
       "      <td>63588.0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   inadimplente  util_linhas_inseguras  idade  vezes_passou_de_30_59_dias  \\\n",
       "0             1               0.766127     45                           2   \n",
       "1             0               0.957151     40                           0   \n",
       "2             0               0.658180     38                           1   \n",
       "3             0               0.233810     30                           0   \n",
       "4             0               0.907239     49                           1   \n",
       "\n",
       "   razao_debito  salario_mensal  numero_linhas_crdto_aberto  \\\n",
       "0      0.802982          9120.0                          13   \n",
       "1      0.121876          2600.0                           4   \n",
       "2      0.085113          3042.0                           2   \n",
       "3      0.036050          3300.0                           5   \n",
       "4      0.024926         63588.0                           7   \n",
       "\n",
       "   numero_vezes_passou_90_dias  numero_emprestimos_imobiliarios  \\\n",
       "0                            0                                6   \n",
       "1                            0                                0   \n",
       "2                            1                                0   \n",
       "3                            0                                0   \n",
       "4                            0                                1   \n",
       "\n",
       "   numero_de_vezes_que_passou_60_89_dias  numero_de_dependentes  \n",
       "0                                      0                    2.0  \n",
       "1                                      0                    1.0  \n",
       "2                                      0                    0.0  \n",
       "3                                      0                    0.0  \n",
       "4                                      0                    0.0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#5 primeiras linhas\n",
    "df_treino.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Verificação de tamanho e tipo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(110000, 11)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#shape do arquivo (linhas x colunas)\n",
    "df_treino.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 110000 entries, 0 to 109999\n",
      "Data columns (total 11 columns):\n",
      "inadimplente                             110000 non-null int64\n",
      "util_linhas_inseguras                    110000 non-null float64\n",
      "idade                                    110000 non-null int64\n",
      "vezes_passou_de_30_59_dias               110000 non-null int64\n",
      "razao_debito                             110000 non-null float64\n",
      "salario_mensal                           88237 non-null float64\n",
      "numero_linhas_crdto_aberto               110000 non-null int64\n",
      "numero_vezes_passou_90_dias              110000 non-null int64\n",
      "numero_emprestimos_imobiliarios          110000 non-null int64\n",
      "numero_de_vezes_que_passou_60_89_dias    110000 non-null int64\n",
      "numero_de_dependentes                    107122 non-null float64\n",
      "dtypes: float64(4), int64(7)\n",
      "memory usage: 9.2 MB\n"
     ]
    }
   ],
   "source": [
    "#verificando os tipos de dados de cada coluna\n",
    "df_treino.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Tratamento de linhas vazias  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "inadimplente                                 0\n",
       "util_linhas_inseguras                        0\n",
       "idade                                        0\n",
       "vezes_passou_de_30_59_dias                   0\n",
       "razao_debito                                 0\n",
       "salario_mensal                           21763\n",
       "numero_linhas_crdto_aberto                   0\n",
       "numero_vezes_passou_90_dias                  0\n",
       "numero_emprestimos_imobiliarios              0\n",
       "numero_de_vezes_que_passou_60_89_dias        0\n",
       "numero_de_dependentes                     2878\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#verificando se há linhas vazias\n",
    "df_treino.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Tratamento de linhas vazias da coluna numero_de_dependentes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 20. nan]\n"
     ]
    }
   ],
   "source": [
    "#verificando a quantidade de valores únicos da coluna numero_de_dependentes\n",
    "print(df_treino['numero_de_dependentes'].sort_values().unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0     63652\n",
      "1.0     19416\n",
      "2.0     14306\n",
      "3.0      6898\n",
      "4.0      2111\n",
      "5.0       563\n",
      "6.0       115\n",
      "7.0        38\n",
      "8.0        16\n",
      "10.0        4\n",
      "9.0         2\n",
      "20.0        1\n",
      "Name: numero_de_dependentes, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#quantidade total de valores pela coluna numero de dependentes\n",
    "dependentes = df_treino['numero_de_dependentes'].value_counts()\n",
    "print(dependentes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_treino['numero_de_dependentes'].fillna(value=0,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 20.]\n"
     ]
    }
   ],
   "source": [
    "print(df_treino['numero_de_dependentes'].sort_values().unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0     63652\n",
      "1.0     19416\n",
      "2.0     14306\n",
      "3.0      6898\n",
      "4.0      2111\n",
      "5.0       563\n",
      "6.0       115\n",
      "7.0        38\n",
      "8.0        16\n",
      "10.0        4\n",
      "9.0         2\n",
      "20.0        1\n",
      "Name: numero_de_dependentes, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(dependentes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(109261, 11)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#retirando da base as linhas com numero de dependentes maior que 5\n",
    "df_tratado = df_treino.loc[df_treino['numero_de_dependentes'] < 5]\n",
    "df_tratado.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0. 1. 2. 3. 4.]\n"
     ]
    }
   ],
   "source": [
    "print(df_tratado['numero_de_dependentes'].sort_values().unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Tratamento de linhas vazias da coluna salario_mensal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_tratado = df_tratado.loc[df_tratado['salario_mensal'] > 100.0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6750.896749700125\n"
     ]
    }
   ],
   "source": [
    "#verificando a quantidade de valores únicos da coluna numero_de_dependentes\n",
    "\n",
    "#analisando a média salarial\n",
    "media = df_tratado['salario_mensal'].mean()\n",
    "print(media)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5448.0\n"
     ]
    }
   ],
   "source": [
    "#analisando a mediana dos salários\n",
    "mediana = df_tratado['salario_mensal'].median()\n",
    "print(mediana)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(85869, 11)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tratado.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df_tratado['salario_mensal'].fillna(value=mediana,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "inadimplente                             0\n",
       "util_linhas_inseguras                    0\n",
       "idade                                    0\n",
       "vezes_passou_de_30_59_dias               0\n",
       "razao_debito                             0\n",
       "salario_mensal                           0\n",
       "numero_linhas_crdto_aberto               0\n",
       "numero_vezes_passou_90_dias              0\n",
       "numero_emprestimos_imobiliarios          0\n",
       "numero_de_vezes_que_passou_60_89_dias    0\n",
       "numero_de_dependentes                    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tratado.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(85869, 11)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tratado.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Análise de Dados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#verificando a distribuição das idades \n",
    "plt.figure(figsize=(12,5))\n",
    "plt.hist(df_tratado['idade'])\n",
    "plt.xlabel('idade')\n",
    "plt.ylabel('quantidade')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#verificando a correlação entre os dados\n",
    "plt.figure(figsize=(12,5))\n",
    "corr = df_tratado.corr()\n",
    "sns.heatmap(corr, annot=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Separando os dados na tabela de treino"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = df_tratado.loc[:, 'util_linhas_inseguras':]  \n",
    "y = df_tratado.loc[:, 'inadimplente'] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Normalização de Dados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler        \n",
    "scaler = StandardScaler()\n",
    "scaler.fit(x_train)\n",
    "\n",
    "x_train = scaler.transform(x_train)\n",
    "x_test = scaler.transform(x_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Árvore de Decisão"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "clf = DecisionTreeClassifier()\n",
    "\n",
    "clf = clf.fit(x_train, y_train)\n",
    "\n",
    "y_pred = clf.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report, confusion_matrix\n",
    "from mlxtend.plotting import plot_confusion_matrix\n",
    "matriz_confusao = confusion_matrix(y_test, y_pred)\n",
    "\n",
    "fig, ax = plot_confusion_matrix(conf_mat=matriz_confusao)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.95      0.94      0.94     16032\n",
      "           1       0.26      0.31      0.28      1142\n",
      "\n",
      "    accuracy                           0.89     17174\n",
      "   macro avg       0.60      0.62      0.61     17174\n",
      "weighted avg       0.90      0.89      0.90     17174\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.893618260160708\n"
     ]
    }
   ],
   "source": [
    "test_score = clf.score(x_test, y_test)\n",
    "\n",
    "print(test_score)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Feature Importance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "def compara_modelos(maxdepth):\n",
    "    if maxdepth == 0:\n",
    "        dt = DecisionTreeClassifier(random_state=1)\n",
    "    else:\n",
    "        dt = DecisionTreeClassifier(random_state=1, max_depth=maxdepth)\n",
    "    clf.fit(x_train, y_train)    \n",
    "    train_score = clf.score(x_train, y_train)\n",
    "    test_score = clf.score(x_test, y_test)\n",
    "    return train_score,test_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "depth      Training score       Testing score       \n",
      "-----      --------------       -------------       \n",
      "2         (1.0, 0.8947828112262722) \n",
      "3         (1.0, 0.8955979969721672) \n",
      "4         (1.0, 0.8954815418656108) \n",
      "10         (1.0, 0.8953650867590544) \n",
      "15         (1.0, 0.8958891347385582) \n",
      "Full         (1.0, 0.893618260160708) \n"
     ]
    }
   ],
   "source": [
    "print('{:10} {:20} {:20}'.format('depth', 'Training score','Testing score'))\n",
    "print('{:10} {:20} {:20}'.format('-----', '--------------','-------------'))\n",
    "print('{:1}         {} '.format(2,str(compara_modelos(2))))\n",
    "print('{:1}         {} '.format(3,str(compara_modelos(3))))\n",
    "print('{:1}         {} '.format(4,str(compara_modelos(4))))\n",
    "print('{:1}         {} '.format(10,str(compara_modelos(10))))\n",
    "print('{:1}         {} '.format(15,str(compara_modelos(15))))\n",
    "print('{:1}         {} '.format('Full',str(compara_modelos(0))))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature: 0, Score: 0.18707\n",
      "Feature: 1, Score: 0.11497\n",
      "Feature: 2, Score: 0.03946\n",
      "Feature: 3, Score: 0.19105\n",
      "Feature: 4, Score: 0.17257\n",
      "Feature: 5, Score: 0.08440\n",
      "Feature: 6, Score: 0.11577\n",
      "Feature: 7, Score: 0.02679\n",
      "Feature: 8, Score: 0.02748\n",
      "Feature: 9, Score: 0.04043\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fi = clf.feature_importances_\n",
    "\n",
    "for i,v in enumerate(fi):\n",
    "    print('Feature: %0d, Score: %.5f' % (i,v))\n",
    "\n",
    "plt.bar([x for x in range(len(fi))], fi)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Predição do Teste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_teste = pd.read_csv('teste.csv', sep=',', encoding='utf-8')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>util_linhas_inseguras</th>\n",
       "      <th>idade</th>\n",
       "      <th>vezes_passou_de_30_59_dias</th>\n",
       "      <th>razao_debito</th>\n",
       "      <th>salario_mensal</th>\n",
       "      <th>numero_linhas_crdto_aberto</th>\n",
       "      <th>numero_vezes_passou_90_dias</th>\n",
       "      <th>numero_emprestimos_imobiliarios</th>\n",
       "      <th>numero_de_vezes_que_passou_60_89_dias</th>\n",
       "      <th>numero_de_dependentes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.025849</td>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "      <td>0.081775</td>\n",
       "      <td>8180.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.667083</td>\n",
       "      <td>55</td>\n",
       "      <td>0</td>\n",
       "      <td>0.153112</td>\n",
       "      <td>2200.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.007093</td>\n",
       "      <td>44</td>\n",
       "      <td>0</td>\n",
       "      <td>0.148800</td>\n",
       "      <td>7499.0</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.091213</td>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>0.351635</td>\n",
       "      <td>5900.0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.112680</td>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>0.065959</td>\n",
       "      <td>2167.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   util_linhas_inseguras  idade  vezes_passou_de_30_59_dias  razao_debito  \\\n",
       "0               0.025849     62                           0      0.081775   \n",
       "1               0.667083     55                           0      0.153112   \n",
       "2               0.007093     44                           0      0.148800   \n",
       "3               0.091213     54                           0      0.351635   \n",
       "4               0.112680     54                           0      0.065959   \n",
       "\n",
       "   salario_mensal  numero_linhas_crdto_aberto  numero_vezes_passou_90_dias  \\\n",
       "0          8180.0                           3                            0   \n",
       "1          2200.0                           3                            0   \n",
       "2          7499.0                          20                            0   \n",
       "3          5900.0                          15                            0   \n",
       "4          2167.0                           3                            0   \n",
       "\n",
       "   numero_emprestimos_imobiliarios  numero_de_vezes_que_passou_60_89_dias  \\\n",
       "0                                2                                      0   \n",
       "1                                0                                      0   \n",
       "2                                1                                      0   \n",
       "3                                1                                      1   \n",
       "4                                0                                      0   \n",
       "\n",
       "   numero_de_dependentes  \n",
       "0                    0.0  \n",
       "1                    0.0  \n",
       "2                    0.0  \n",
       "3                    0.0  \n",
       "4                    0.0  "
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_teste.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(40000, 10)"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_teste.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "util_linhas_inseguras                       0\n",
       "idade                                       0\n",
       "vezes_passou_de_30_59_dias                  0\n",
       "razao_debito                                0\n",
       "salario_mensal                           7968\n",
       "numero_linhas_crdto_aberto                  0\n",
       "numero_vezes_passou_90_dias                 0\n",
       "numero_emprestimos_imobiliarios             0\n",
       "numero_de_vezes_que_passou_60_89_dias       0\n",
       "numero_de_dependentes                    1046\n",
       "dtype: int64"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#verificando se está tudo ok com a base de teste\n",
    "df_teste.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 13. nan]\n"
     ]
    }
   ],
   "source": [
    "print(df_teste['numero_de_dependentes'].sort_values().unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_teste['numero_de_dependentes'].fillna(value=0,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_previsao = df_teste.loc[df_teste['numero_de_dependentes'] < 5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5400.0\n"
     ]
    }
   ],
   "source": [
    "mediana_teste = df_previsao['salario_mensal'].median()\n",
    "print(mediana_teste)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Rachid Elihimas\\Anaconda3\\lib\\site-packages\\pandas\\core\\generic.py:6287: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._update_inplace(new_data)\n"
     ]
    }
   ],
   "source": [
    "df_previsao['salario_mensal'].fillna(value=mediana_teste,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [],
   "source": [
    "#realizando a previsão\n",
    "result = clf.predict(df_previsao)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, ..., 0, 1, 1], dtype=int64)"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checando os resultados\n",
    "result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Rachid Elihimas\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    }
   ],
   "source": [
    "df_previsao['inadimplente'] = result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "#imprimindo o novo arquivo\n",
    "df_previsao.to_csv(r'C:\\Users\\Rachid Elihimas\\Desktop\\cases_datarisk 2\\resposta.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Fim "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
